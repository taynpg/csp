cmake_minimum_required(VERSION 3.16)

project(csp-project VERSION 1.5.0 LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 17)

set(COMPILER_ID ${CMAKE_CXX_COMPILER_ID})
if (MSVC)
    add_compile_options(/source-charset:utf-8)
    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
endif()
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" AND CMAKE_SYSTEM_NAME MATCHES "Windows")
    MESSAGE(STATUS "Csp Add MinGW Param.")
    add_compile_options(-finput-charset=utf-8)
    add_compile_options(-fexec-charset=gbk)
    set(COMPILER_ID "mingw")
    get_filename_component(CXX_COMPILER_PATH ${CMAKE_CXX_COMPILER} DIRECTORY)
    set(MINGW32_DLLS 
    "${CXX_COMPILER_PATH}/libgcc_s_dw2-1.dll"
    "${CXX_COMPILER_PATH}/libstdc++-6.dll"
    "${CXX_COMPILER_PATH}/libwinpthread-1.dll")
    install(FILES ${MINGW32_DLLS} DESTINATION bin)
endif()

add_subdirectory(base)
add_subdirectory(zhcn)
add_subdirectory(tyme4cpp)
add_subdirectory(qimen)
add_subdirectory(src)

if (DEFINED CSP_PYTHON_EXPORT)
message(STATUS "USE CSP_PYTHON_EXPORT ${CSP_PYTHON_EXPORT}")
add_definitions(-DFMT_HEADER_ONLY)
add_definitions(-DFMT_UNICODE=0)
include_directories(export/fmt/include)
add_subdirectory(export/python3)
endif()

install(TARGETS csp DESTINATION bin)
include(config/system.cmake)
# ********************************************************** pack infomation
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(ARCH_BIT "64Bit")
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
    set(ARCH_BIT "32Bit")
else()
    message(FATAL_ERROR "Unknown target architecture")
endif()
set(CPACK_PACKAGE_NAME "csp")
set(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")
set(CPACK_PACKAGE_CONTACT "taynpg <taynpg@163.com>")
set(CPACK_PACKAGE_DESCRIPTION "A Qimen Shipan.")
set(CPACK_PACKAGE_VENDOR "taynpg")
if(WIN32)
set(CPACK_NSIS_MODIFY_PATH ON)
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(CPACK_GENERATOR "NSIS64;ZIP")
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
    set(CPACK_GENERATOR "NSIS;ZIP")
else()
    message(FATAL_ERROR "Unknown target architecture")
endif()
set(CPACK_NSIS_INSTALL_ROOT "$PROFILE")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "csp")
elseif(UNIX AND NOT APPLE)
    set(CPACK_GENERATOR "DEB;TGZ")
    set(CPACK_DEBIAN_PACKAGE_SECTION "utils")
    set(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "taynpg <taynpg@163.com>")
elseif(APPLE)
    set(CPACK_GENERATOR "DragNDrop")
endif()
string(TOLOWER "${COMPILER_ID}" COMPILER_ID_LOWER)
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-v${PROJECT_VERSION}-${COMPILER_ID_LOWER}.${SYSTEM_ARCH}.${ARCH_BIT}")
include(CPack)