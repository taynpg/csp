/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: swig\sxtwl.i

package sxtwl

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef int intgo;
typedef unsigned int uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
extern void _wrap_Swig_free_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_sxtwl_258d85b6700e030a(swig_intgo arg1);
extern uintptr_t _wrap_new_JDList__SWIG_0_sxtwl_258d85b6700e030a(void);
extern uintptr_t _wrap_new_JDList__SWIG_1_sxtwl_258d85b6700e030a(swig_type_1 arg1);
extern uintptr_t _wrap_new_JDList__SWIG_2_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern swig_type_2 _wrap_JDList_size_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern swig_type_3 _wrap_JDList_capacity_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_JDList_reserve_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_type_4 arg2);
extern _Bool _wrap_JDList_isEmpty_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_JDList_clear_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_JDList_add_sxtwl_258d85b6700e030a(uintptr_t arg1, double arg2);
extern double _wrap_JDList_get_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_JDList_set_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_intgo arg2, double arg3);
extern void _wrap_delete_JDList_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_Time_Y_set_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Time_Y_get_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_Time_M_set_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Time_M_get_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_Time_D_set_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Time_D_get_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_Time_h_set_sxtwl_258d85b6700e030a(uintptr_t arg1, double arg2);
extern double _wrap_Time_h_get_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_Time_s_set_sxtwl_258d85b6700e030a(uintptr_t arg1, double arg2);
extern double _wrap_Time_s_get_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_new_Time_sxtwl_258d85b6700e030a(void);
extern void _wrap_delete_Time_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_new_GZ__SWIG_0_sxtwl_258d85b6700e030a(void);
extern uintptr_t _wrap_new_GZ__SWIG_1_sxtwl_258d85b6700e030a(char arg1, char arg2);
extern void _wrap_GZ_tg_set_sxtwl_258d85b6700e030a(uintptr_t arg1, char arg2);
extern char _wrap_GZ_tg_get_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_GZ_dz_set_sxtwl_258d85b6700e030a(uintptr_t arg1, char arg2);
extern char _wrap_GZ_dz_get_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_delete_GZ_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_Day_fromSolar_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_Day_fromLunar__SWIG_0_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2, swig_intgo arg3, _Bool arg4);
extern uintptr_t _wrap_Day_fromLunar__SWIG_1_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_Day_after_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Day_before_sxtwl_258d85b6700e030a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Day_getLunarDay_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern char _wrap_Day_getLunarMonth_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern swig_intgo _wrap_Day_getLunarYear__SWIG_0_sxtwl_258d85b6700e030a(uintptr_t arg1, _Bool arg2);
extern swig_intgo _wrap_Day_getLunarYear__SWIG_1_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_Day_getYearGZ__SWIG_0_sxtwl_258d85b6700e030a(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Day_getYearGZ__SWIG_1_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_Day_getMonthGZ_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_Day_getDayGZ_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_Day_getHourGZ_sxtwl_258d85b6700e030a(uintptr_t arg1, char arg2);
extern _Bool _wrap_Day_isLunarLeap_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern swig_intgo _wrap_Day_getSolarYear_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern char _wrap_Day_getSolarMonth_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern swig_intgo _wrap_Day_getSolarDay_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern char _wrap_Day_getWeek_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern char _wrap_Day_getWeekIndex_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern _Bool _wrap_Day_hasJieQi_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern char _wrap_Day_getJieQi_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern double _wrap_Day_getJieQiJD_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern char _wrap_Day_getConstellation_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern void _wrap_delete_Day_sxtwl_258d85b6700e030a(uintptr_t arg1);
extern uintptr_t _wrap_fromSolar_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_fromLunar__SWIG_0_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2, swig_intgo arg3, _Bool arg4);
extern uintptr_t _wrap_fromLunar__SWIG_1_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_siZhu2Year_sxtwl_258d85b6700e030a(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5, swig_intgo arg6);
extern uintptr_t _wrap_getShiGz_sxtwl_258d85b6700e030a(char arg1, char arg2);
extern char _wrap_getRunMonth_sxtwl_258d85b6700e030a(swig_intgo arg1);
extern char _wrap_getLunarMonthNum__SWIG_0_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2, _Bool arg3);
extern char _wrap_getLunarMonthNum__SWIG_1_sxtwl_258d85b6700e030a(swig_intgo arg1, char arg2);
extern uintptr_t _wrap_JD2DD_sxtwl_258d85b6700e030a(double arg1);
extern double _wrap_toJD_sxtwl_258d85b6700e030a(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrJDList uintptr

func (p SwigcptrJDList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrJDList) SwigIsJDList() {
}

func NewJDList__SWIG_0() (_swig_ret JDList) {
	var swig_r JDList
	swig_r = (JDList)(SwigcptrJDList(C._wrap_new_JDList__SWIG_0_sxtwl_258d85b6700e030a()))
	return swig_r
}

func NewJDList__SWIG_1(arg1 int64) (_swig_ret JDList) {
	var swig_r JDList
	_swig_i_0 := arg1
	swig_r = (JDList)(SwigcptrJDList(C._wrap_new_JDList__SWIG_1_sxtwl_258d85b6700e030a(C.swig_type_1(_swig_i_0))))
	return swig_r
}

func NewJDList__SWIG_2(arg1 JDList) (_swig_ret JDList) {
	var swig_r JDList
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (JDList)(SwigcptrJDList(C._wrap_new_JDList__SWIG_2_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewJDList(a ...interface{}) JDList {
	argc := len(a)
	if argc == 0 {
		return NewJDList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewJDList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewJDList__SWIG_2(a[0].(JDList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrJDList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_JDList_size_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJDList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_JDList_capacity_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJDList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_JDList_reserve_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_type_4(_swig_i_1))
}

func (arg1 SwigcptrJDList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_JDList_isEmpty_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJDList) Clear() {
	_swig_i_0 := arg1
	C._wrap_JDList_clear_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrJDList) Add(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_JDList_add_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrJDList) Get(arg2 int) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_JDList_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrJDList) Set(arg2 int, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_JDList_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))
}

func DeleteJDList(arg1 JDList) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_JDList_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))
}

type JDList interface {
	Swigcptr() uintptr
	SwigIsJDList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 float64)
	Get(arg2 int) (_swig_ret float64)
	Set(arg2 int, arg3 float64)
}

const J2000 int = 2451545
type SwigcptrTime uintptr

func (p SwigcptrTime) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTime) SwigIsTime() {
}

func (arg1 SwigcptrTime) SetY(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_Y_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetY() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_Y_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetM(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_M_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetM() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_M_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetD(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_D_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetD() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_D_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetH(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_h_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrTime) GetH() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Time_h_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetS(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_s_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrTime) GetS() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Time_s_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewTime() (_swig_ret Time) {
	var swig_r Time
	swig_r = (Time)(SwigcptrTime(C._wrap_new_Time_sxtwl_258d85b6700e030a()))
	return swig_r
}

func DeleteTime(arg1 Time) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Time_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))
}

type Time interface {
	Swigcptr() uintptr
	SwigIsTime()
	SetY(arg2 int)
	GetY() (_swig_ret int)
	SetM(arg2 int)
	GetM() (_swig_ret int)
	SetD(arg2 int)
	GetD() (_swig_ret int)
	SetH(arg2 float64)
	GetH() (_swig_ret float64)
	SetS(arg2 float64)
	GetS() (_swig_ret float64)
}

type SwigcptrGZ uintptr

func (p SwigcptrGZ) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGZ) SwigIsGZ() {
}

func NewGZ__SWIG_0() (_swig_ret GZ) {
	var swig_r GZ
	swig_r = (GZ)(SwigcptrGZ(C._wrap_new_GZ__SWIG_0_sxtwl_258d85b6700e030a()))
	return swig_r
}

func NewGZ__SWIG_1(arg1 byte, arg2 byte) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_new_GZ__SWIG_1_sxtwl_258d85b6700e030a(C.char(_swig_i_0), C.char(_swig_i_1))))
	return swig_r
}

func NewGZ(a ...interface{}) GZ {
	argc := len(a)
	if argc == 0 {
		return NewGZ__SWIG_0()
	}
	if argc == 2 {
		return NewGZ__SWIG_1(a[0].(byte), a[1].(byte))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrGZ) SetTg(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GZ_tg_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrGZ) GetTg() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_GZ_tg_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGZ) SetDz(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GZ_dz_set_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrGZ) GetDz() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_GZ_dz_get_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteGZ(arg1 GZ) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GZ_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))
}

type GZ interface {
	Swigcptr() uintptr
	SwigIsGZ()
	SetTg(arg2 byte)
	GetTg() (_swig_ret byte)
	SetDz(arg2 byte)
	GetDz() (_swig_ret byte)
}

type SwigcptrDay uintptr

func (p SwigcptrDay) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDay) SwigIsDay() {
}

func DayFromSolar(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_fromSolar_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func DayFromLunar__SWIG_0(arg1 int, arg2 byte, arg3 int, arg4 bool) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_fromLunar__SWIG_0_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func DayFromLunar__SWIG_1(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_fromLunar__SWIG_1_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func DayFromLunar(a ...interface{}) Day {
	argc := len(a)
	if argc == 3 {
		return DayFromLunar__SWIG_1(a[0].(int), a[1].(byte), a[2].(int))
	}
	if argc == 4 {
		return DayFromLunar__SWIG_0(a[0].(int), a[1].(byte), a[2].(int), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDay) After(arg2 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_after_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDay) Before(arg2 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_before_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarDay() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getLunarDay_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarMonth() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getLunarMonth_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarYear__SWIG_0(arg2 bool) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Day_getLunarYear__SWIG_0_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarYear__SWIG_1() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getLunarYear__SWIG_1_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrDay) GetLunarYear(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.GetLunarYear__SWIG_1()
	}
	if argc == 1 {
		return p.GetLunarYear__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDay) GetYearGZ__SWIG_0(arg2 bool) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getYearGZ__SWIG_0_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDay) GetYearGZ__SWIG_1() (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getYearGZ__SWIG_1_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDay) GetYearGZ(a ...interface{}) GZ {
	argc := len(a)
	if argc == 0 {
		return p.GetYearGZ__SWIG_1()
	}
	if argc == 1 {
		return p.GetYearGZ__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDay) GetMonthGZ() (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getMonthGZ_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDay) GetDayGZ() (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getDayGZ_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDay) GetHourGZ(arg2 byte) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getHourGZ_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDay) IsLunarLeap() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Day_isLunarLeap_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetSolarYear() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getSolarYear_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetSolarMonth() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getSolarMonth_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetSolarDay() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getSolarDay_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetWeek() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getWeek_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetWeekIndex() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getWeekIndex_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) HasJieQi() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Day_hasJieQi_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetJieQi() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getJieQi_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetJieQiJD() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Day_getJieQiJD_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetConstellation() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getConstellation_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteDay(arg1 Day) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Day_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0))
}

type Day interface {
	Swigcptr() uintptr
	SwigIsDay()
	After(arg2 int) (_swig_ret Day)
	Before(arg2 int) (_swig_ret Day)
	GetLunarDay() (_swig_ret int)
	GetLunarMonth() (_swig_ret byte)
	GetLunarYear(a ...interface{}) int
	GetYearGZ(a ...interface{}) GZ
	GetMonthGZ() (_swig_ret GZ)
	GetDayGZ() (_swig_ret GZ)
	GetHourGZ(arg2 byte) (_swig_ret GZ)
	IsLunarLeap() (_swig_ret bool)
	GetSolarYear() (_swig_ret int)
	GetSolarMonth() (_swig_ret byte)
	GetSolarDay() (_swig_ret int)
	GetWeek() (_swig_ret byte)
	GetWeekIndex() (_swig_ret byte)
	HasJieQi() (_swig_ret bool)
	GetJieQi() (_swig_ret byte)
	GetJieQiJD() (_swig_ret float64)
	GetConstellation() (_swig_ret byte)
}

func FromSolar(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_fromSolar_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func FromLunar__SWIG_0(arg1 int, arg2 byte, arg3 int, arg4 bool) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Day)(SwigcptrDay(C._wrap_fromLunar__SWIG_0_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func FromLunar__SWIG_1(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_fromLunar__SWIG_1_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func FromLunar(a ...interface{}) Day {
	argc := len(a)
	if argc == 3 {
		return FromLunar__SWIG_1(a[0].(int), a[1].(byte), a[2].(int))
	}
	if argc == 4 {
		return FromLunar__SWIG_0(a[0].(int), a[1].(byte), a[2].(int), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func SiZhu2Year(arg1 GZ, arg2 GZ, arg3 GZ, arg4 GZ, arg5 int, arg6 int) (_swig_ret JDList) {
	var swig_r JDList
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (JDList)(SwigcptrJDList(C._wrap_siZhu2Year_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5))))
	return swig_r
}

func GetShiGz(arg1 byte, arg2 byte) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_getShiGz_sxtwl_258d85b6700e030a(C.char(_swig_i_0), C.char(_swig_i_1))))
	return swig_r
}

func GetRunMonth(arg1 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_getRunMonth_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func GetLunarMonthNum__SWIG_0(arg1 int, arg2 byte, arg3 bool) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (byte)(C._wrap_getLunarMonthNum__SWIG_0_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func GetLunarMonthNum__SWIG_1(arg1 int, arg2 byte) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_getLunarMonthNum__SWIG_1_sxtwl_258d85b6700e030a(C.swig_intgo(_swig_i_0), C.char(_swig_i_1)))
	return swig_r
}

func GetLunarMonthNum(a ...interface{}) byte {
	argc := len(a)
	if argc == 2 {
		return GetLunarMonthNum__SWIG_1(a[0].(int), a[1].(byte))
	}
	if argc == 3 {
		return GetLunarMonthNum__SWIG_0(a[0].(int), a[1].(byte), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func JD2DD(arg1 float64) (_swig_ret Time) {
	var swig_r Time
	_swig_i_0 := arg1
	swig_r = (Time)(SwigcptrTime(C._wrap_JD2DD_sxtwl_258d85b6700e030a(C.double(_swig_i_0))))
	return swig_r
}

func ToJD(arg1 Time) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (float64)(C._wrap_toJD_sxtwl_258d85b6700e030a(C.uintptr_t(_swig_i_0)))
	return swig_r
}


