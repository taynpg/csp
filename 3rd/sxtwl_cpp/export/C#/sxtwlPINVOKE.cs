//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class sxtwlPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="SWIGRegisterExceptionCallbacks_sxtwl")]
    public static extern void SWIGRegisterExceptionCallbacks_sxtwl(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_sxtwl")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_sxtwl(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_sxtwl(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_sxtwl(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="SWIGRegisterStringCallback_sxtwl")]
    public static extern void SWIGRegisterStringCallback_sxtwl(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_sxtwl(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static sxtwlPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Clear")]
  public static extern void JDList_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Add")]
  public static extern void JDList_Add(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_size")]
  public static extern uint JDList_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_capacity")]
  public static extern uint JDList_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_reserve")]
  public static extern void JDList_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_JDList__SWIG_0")]
  public static extern global::System.IntPtr new_JDList__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_JDList__SWIG_1")]
  public static extern global::System.IntPtr new_JDList__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_JDList__SWIG_2")]
  public static extern global::System.IntPtr new_JDList__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_getitemcopy")]
  public static extern double JDList_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_getitem")]
  public static extern double JDList_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_setitem")]
  public static extern void JDList_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, double jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_AddRange")]
  public static extern void JDList_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_GetRange")]
  public static extern global::System.IntPtr JDList_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Insert")]
  public static extern void JDList_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, double jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_InsertRange")]
  public static extern void JDList_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_RemoveAt")]
  public static extern void JDList_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_RemoveRange")]
  public static extern void JDList_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Repeat")]
  public static extern global::System.IntPtr JDList_Repeat(double jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Reverse__SWIG_0")]
  public static extern void JDList_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Reverse__SWIG_1")]
  public static extern void JDList_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_SetRange")]
  public static extern void JDList_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Contains")]
  public static extern bool JDList_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_IndexOf")]
  public static extern int JDList_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_LastIndexOf")]
  public static extern int JDList_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JDList_Remove")]
  public static extern bool JDList_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_delete_JDList")]
  public static extern void delete_JDList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_Clear")]
  public static extern void JQList_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_Add")]
  public static extern void JQList_Add(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_size")]
  public static extern uint JQList_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_capacity")]
  public static extern uint JQList_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_reserve")]
  public static extern void JQList_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_JQList__SWIG_0")]
  public static extern global::System.IntPtr new_JQList__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_JQList__SWIG_1")]
  public static extern global::System.IntPtr new_JQList__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_JQList__SWIG_2")]
  public static extern global::System.IntPtr new_JQList__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_getitemcopy")]
  public static extern global::System.IntPtr JQList_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_getitem")]
  public static extern global::System.IntPtr JQList_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_setitem")]
  public static extern void JQList_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_AddRange")]
  public static extern void JQList_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_GetRange")]
  public static extern global::System.IntPtr JQList_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_Insert")]
  public static extern void JQList_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_InsertRange")]
  public static extern void JQList_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_RemoveAt")]
  public static extern void JQList_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_RemoveRange")]
  public static extern void JQList_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_Repeat")]
  public static extern global::System.IntPtr JQList_Repeat(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_Reverse__SWIG_0")]
  public static extern void JQList_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_Reverse__SWIG_1")]
  public static extern void JQList_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JQList_SetRange")]
  public static extern void JQList_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_delete_JQList")]
  public static extern void delete_JQList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_J2000_get")]
  public static extern int J2000_get();

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_Time__SWIG_0")]
  public static extern global::System.IntPtr new_Time__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_Time__SWIG_1")]
  public static extern global::System.IntPtr new_Time__SWIG_1(int jarg1, int jarg2, int jarg3, double jarg4, double jarg5, double jarg6);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_Y_set")]
  public static extern void Time_Y_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_Y_get")]
  public static extern int Time_Y_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_M_set")]
  public static extern void Time_M_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_M_get")]
  public static extern int Time_M_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_D_set")]
  public static extern void Time_D_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_D_get")]
  public static extern int Time_D_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_h_set")]
  public static extern void Time_h_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_h_get")]
  public static extern double Time_h_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_m_set")]
  public static extern void Time_m_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_m_get")]
  public static extern double Time_m_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_s_set")]
  public static extern void Time_s_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_s_get")]
  public static extern double Time_s_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_getYear")]
  public static extern int Time_getYear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_setYear")]
  public static extern void Time_setYear(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_setMonth")]
  public static extern void Time_setMonth(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_getMonth")]
  public static extern int Time_getMonth(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_getDay")]
  public static extern int Time_getDay(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_setDay")]
  public static extern void Time_setDay(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_getHour")]
  public static extern double Time_getHour(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_setHour")]
  public static extern void Time_setHour(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_getMin")]
  public static extern double Time_getMin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_setMour")]
  public static extern void Time_setMour(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_getSec")]
  public static extern double Time_getSec(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Time_setSec")]
  public static extern void Time_setSec(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_delete_Time")]
  public static extern void delete_Time(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_GZ__SWIG_0")]
  public static extern global::System.IntPtr new_GZ__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_GZ__SWIG_1")]
  public static extern global::System.IntPtr new_GZ__SWIG_1(byte jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_GZ_tg_set")]
  public static extern void GZ_tg_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_GZ_tg_get")]
  public static extern byte GZ_tg_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_GZ_dz_set")]
  public static extern void GZ_dz_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_GZ_dz_get")]
  public static extern byte GZ_dz_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_delete_GZ")]
  public static extern void delete_GZ(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_fromSolar")]
  public static extern global::System.IntPtr Day_fromSolar(int jarg1, byte jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_fromLunar__SWIG_0")]
  public static extern global::System.IntPtr Day_fromLunar__SWIG_0(int jarg1, byte jarg2, int jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_fromLunar__SWIG_1")]
  public static extern global::System.IntPtr Day_fromLunar__SWIG_1(int jarg1, byte jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_after")]
  public static extern global::System.IntPtr Day_after(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_before")]
  public static extern global::System.IntPtr Day_before(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getLunarDay")]
  public static extern int Day_getLunarDay(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getLunarMonth")]
  public static extern byte Day_getLunarMonth(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getLunarYear__SWIG_0")]
  public static extern int Day_getLunarYear__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getLunarYear__SWIG_1")]
  public static extern int Day_getLunarYear__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getYearGZ__SWIG_0")]
  public static extern global::System.IntPtr Day_getYearGZ__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getYearGZ__SWIG_1")]
  public static extern global::System.IntPtr Day_getYearGZ__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getMonthGZ")]
  public static extern global::System.IntPtr Day_getMonthGZ(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getDayGZ")]
  public static extern global::System.IntPtr Day_getDayGZ(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getHourGZ__SWIG_0")]
  public static extern global::System.IntPtr Day_getHourGZ__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getHourGZ__SWIG_1")]
  public static extern global::System.IntPtr Day_getHourGZ__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_isLunarLeap")]
  public static extern bool Day_isLunarLeap(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getSolarYear")]
  public static extern int Day_getSolarYear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getSolarMonth")]
  public static extern byte Day_getSolarMonth(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getSolarDay")]
  public static extern int Day_getSolarDay(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getWeek")]
  public static extern byte Day_getWeek(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getWeekIndex")]
  public static extern byte Day_getWeekIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_hasJieQi")]
  public static extern bool Day_hasJieQi(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getJieQi")]
  public static extern byte Day_getJieQi(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getJieQiJD")]
  public static extern double Day_getJieQiJD(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_Day_getConstellation")]
  public static extern byte Day_getConstellation(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_delete_Day")]
  public static extern void delete_Day(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JieQiInfo_jd_set")]
  public static extern void JieQiInfo_jd_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JieQiInfo_jd_get")]
  public static extern double JieQiInfo_jd_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JieQiInfo_jqIndex_set")]
  public static extern void JieQiInfo_jqIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JieQiInfo_jqIndex_get")]
  public static extern byte JieQiInfo_jqIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_new_JieQiInfo")]
  public static extern global::System.IntPtr new_JieQiInfo();

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_delete_JieQiInfo")]
  public static extern void delete_JieQiInfo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_fromSolar")]
  public static extern global::System.IntPtr fromSolar(int jarg1, byte jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_fromLunar__SWIG_0")]
  public static extern global::System.IntPtr fromLunar__SWIG_0(int jarg1, byte jarg2, int jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_fromLunar__SWIG_1")]
  public static extern global::System.IntPtr fromLunar__SWIG_1(int jarg1, byte jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_siZhu2Year")]
  public static extern global::System.IntPtr siZhu2Year(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, int jarg5, int jarg6);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_getShiGz__SWIG_0")]
  public static extern global::System.IntPtr getShiGz__SWIG_0(byte jarg1, byte jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_getShiGz__SWIG_1")]
  public static extern global::System.IntPtr getShiGz__SWIG_1(byte jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_getRunMonth")]
  public static extern byte getRunMonth(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_getLunarMonthNum__SWIG_0")]
  public static extern byte getLunarMonthNum__SWIG_0(int jarg1, byte jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_getLunarMonthNum__SWIG_1")]
  public static extern byte getLunarMonthNum__SWIG_1(int jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_JD2DD")]
  public static extern global::System.IntPtr JD2DD(double jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_toJD")]
  public static extern double toJD(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("sxtwl", EntryPoint="CSharp_getJieQiByYear")]
  public static extern global::System.IntPtr getJieQiByYear(int jarg1);
}
