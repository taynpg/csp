/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: swig\sxtwl.i

package sxtwl

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef int intgo;
typedef unsigned int uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
extern void _wrap_Swig_free_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_sxtwl_0d57379df002c83c(swig_intgo arg1);
extern uintptr_t _wrap_new_JDList__SWIG_0_sxtwl_0d57379df002c83c(void);
extern uintptr_t _wrap_new_JDList__SWIG_1_sxtwl_0d57379df002c83c(swig_type_1 arg1);
extern uintptr_t _wrap_new_JDList__SWIG_2_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_type_2 _wrap_JDList_size_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_type_3 _wrap_JDList_capacity_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JDList_reserve_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_type_4 arg2);
extern _Bool _wrap_JDList_isEmpty_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JDList_clear_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JDList_add_sxtwl_0d57379df002c83c(uintptr_t arg1, double arg2);
extern double _wrap_JDList_get_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_JDList_set_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2, double arg3);
extern void _wrap_delete_JDList_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_new_JQList__SWIG_0_sxtwl_0d57379df002c83c(void);
extern uintptr_t _wrap_new_JQList__SWIG_1_sxtwl_0d57379df002c83c(swig_type_5 arg1);
extern uintptr_t _wrap_new_JQList__SWIG_2_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_type_6 _wrap_JQList_size_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_type_7 _wrap_JQList_capacity_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JQList_reserve_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_type_8 arg2);
extern _Bool _wrap_JQList_isEmpty_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JQList_clear_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JQList_add_sxtwl_0d57379df002c83c(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_JQList_get_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_JQList_set_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_JQList_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_new_Time__SWIG_0_sxtwl_0d57379df002c83c(void);
extern uintptr_t _wrap_new_Time__SWIG_1_sxtwl_0d57379df002c83c(swig_intgo arg1, swig_intgo arg2, swig_intgo arg3, double arg4, double arg5, double arg6);
extern void _wrap_Time_Y_set_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Time_Y_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_M_set_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Time_M_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_D_set_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Time_D_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_h_set_sxtwl_0d57379df002c83c(uintptr_t arg1, double arg2);
extern double _wrap_Time_h_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_s_set_sxtwl_0d57379df002c83c(uintptr_t arg1, double arg2);
extern double _wrap_Time_s_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_intgo _wrap_Time_getYear_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_setYear_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Time_setMonth_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Time_getMonth_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_intgo _wrap_Time_getDay_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_setDay_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern double _wrap_Time_getHour_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_setHour_sxtwl_0d57379df002c83c(uintptr_t arg1, double arg2);
extern double _wrap_Time_getMin_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_setMour_sxtwl_0d57379df002c83c(uintptr_t arg1, double arg2);
extern double _wrap_Time_getSec_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_Time_setSec_sxtwl_0d57379df002c83c(uintptr_t arg1, double arg2);
extern void _wrap_delete_Time_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_new_GZ__SWIG_0_sxtwl_0d57379df002c83c(void);
extern uintptr_t _wrap_new_GZ__SWIG_1_sxtwl_0d57379df002c83c(char arg1, char arg2);
extern void _wrap_GZ_tg_set_sxtwl_0d57379df002c83c(uintptr_t arg1, char arg2);
extern char _wrap_GZ_tg_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_GZ_dz_set_sxtwl_0d57379df002c83c(uintptr_t arg1, char arg2);
extern char _wrap_GZ_dz_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_delete_GZ_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_Day_fromSolar_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_Day_fromLunar__SWIG_0_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2, swig_intgo arg3, _Bool arg4);
extern uintptr_t _wrap_Day_fromLunar__SWIG_1_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_Day_after_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Day_before_sxtwl_0d57379df002c83c(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Day_getLunarDay_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern char _wrap_Day_getLunarMonth_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_intgo _wrap_Day_getLunarYear__SWIG_0_sxtwl_0d57379df002c83c(uintptr_t arg1, _Bool arg2);
extern swig_intgo _wrap_Day_getLunarYear__SWIG_1_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_Day_getYearGZ__SWIG_0_sxtwl_0d57379df002c83c(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Day_getYearGZ__SWIG_1_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_Day_getMonthGZ_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_Day_getDayGZ_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_Day_getHourGZ__SWIG_0_sxtwl_0d57379df002c83c(uintptr_t arg1, char arg2, _Bool arg3);
extern uintptr_t _wrap_Day_getHourGZ__SWIG_1_sxtwl_0d57379df002c83c(uintptr_t arg1, char arg2);
extern _Bool _wrap_Day_isLunarLeap_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_intgo _wrap_Day_getSolarYear_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern char _wrap_Day_getSolarMonth_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern swig_intgo _wrap_Day_getSolarDay_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern char _wrap_Day_getWeek_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern char _wrap_Day_getWeekIndex_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern _Bool _wrap_Day_hasJieQi_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern char _wrap_Day_getJieQi_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern double _wrap_Day_getJieQiJD_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern char _wrap_Day_getConstellation_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_delete_Day_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JieQiInfo_jd_set_sxtwl_0d57379df002c83c(uintptr_t arg1, double arg2);
extern double _wrap_JieQiInfo_jd_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern void _wrap_JieQiInfo_jqIndex_set_sxtwl_0d57379df002c83c(uintptr_t arg1, char arg2);
extern char _wrap_JieQiInfo_jqIndex_get_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_new_JieQiInfo_sxtwl_0d57379df002c83c(void);
extern void _wrap_delete_JieQiInfo_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_fromSolar_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_fromLunar__SWIG_0_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2, swig_intgo arg3, _Bool arg4);
extern uintptr_t _wrap_fromLunar__SWIG_1_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2, swig_intgo arg3);
extern uintptr_t _wrap_siZhu2Year_sxtwl_0d57379df002c83c(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5, swig_intgo arg6);
extern uintptr_t _wrap_getShiGz__SWIG_0_sxtwl_0d57379df002c83c(char arg1, char arg2, _Bool arg3);
extern uintptr_t _wrap_getShiGz__SWIG_1_sxtwl_0d57379df002c83c(char arg1, char arg2);
extern char _wrap_getRunMonth_sxtwl_0d57379df002c83c(swig_intgo arg1);
extern char _wrap_getLunarMonthNum__SWIG_0_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2, _Bool arg3);
extern char _wrap_getLunarMonthNum__SWIG_1_sxtwl_0d57379df002c83c(swig_intgo arg1, char arg2);
extern uintptr_t _wrap_JD2DD_sxtwl_0d57379df002c83c(double arg1);
extern double _wrap_toJD_sxtwl_0d57379df002c83c(uintptr_t arg1);
extern uintptr_t _wrap_getJieQiByYear_sxtwl_0d57379df002c83c(swig_intgo arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


func getSwigcptr(v interface { Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}


type _ sync.Mutex

//export cgo_panic__sxtwl_0d57379df002c83c
func cgo_panic__sxtwl_0d57379df002c83c(p *byte) {
	s := (*[1024]byte)(unsafe.Pointer(p))[:]
	for i, b := range s {
		if b == 0 {
			panic(string(s[:i]))
		}
	}
	panic(string(s))
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrJDList uintptr

func (p SwigcptrJDList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrJDList) SwigIsJDList() {
}

func NewJDList__SWIG_0() (_swig_ret JDList) {
	var swig_r JDList
	swig_r = (JDList)(SwigcptrJDList(C._wrap_new_JDList__SWIG_0_sxtwl_0d57379df002c83c()))
	return swig_r
}

func NewJDList__SWIG_1(arg1 int64) (_swig_ret JDList) {
	var swig_r JDList
	_swig_i_0 := arg1
	swig_r = (JDList)(SwigcptrJDList(C._wrap_new_JDList__SWIG_1_sxtwl_0d57379df002c83c(C.swig_type_1(_swig_i_0))))
	return swig_r
}

func NewJDList__SWIG_2(arg1 JDList) (_swig_ret JDList) {
	var swig_r JDList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (JDList)(SwigcptrJDList(C._wrap_new_JDList__SWIG_2_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewJDList(a ...interface{}) JDList {
	argc := len(a)
	if argc == 0 {
		return NewJDList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewJDList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewJDList__SWIG_2(a[0].(JDList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrJDList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_JDList_size_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJDList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_JDList_capacity_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJDList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_JDList_reserve_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_type_4(_swig_i_1))
}

func (arg1 SwigcptrJDList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_JDList_isEmpty_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJDList) Clear() {
	_swig_i_0 := arg1
	C._wrap_JDList_clear_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrJDList) Add(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_JDList_add_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrJDList) Get(arg2 int) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_JDList_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrJDList) Set(arg2 int, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_JDList_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))
}

func DeleteJDList(arg1 JDList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_JDList_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

type JDList interface {
	Swigcptr() uintptr
	SwigIsJDList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 float64)
	Get(arg2 int) (_swig_ret float64)
	Set(arg2 int, arg3 float64)
}

type SwigcptrJQList uintptr

func (p SwigcptrJQList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrJQList) SwigIsJQList() {
}

func NewJQList__SWIG_0() (_swig_ret JQList) {
	var swig_r JQList
	swig_r = (JQList)(SwigcptrJQList(C._wrap_new_JQList__SWIG_0_sxtwl_0d57379df002c83c()))
	return swig_r
}

func NewJQList__SWIG_1(arg1 int64) (_swig_ret JQList) {
	var swig_r JQList
	_swig_i_0 := arg1
	swig_r = (JQList)(SwigcptrJQList(C._wrap_new_JQList__SWIG_1_sxtwl_0d57379df002c83c(C.swig_type_5(_swig_i_0))))
	return swig_r
}

func NewJQList__SWIG_2(arg1 JQList) (_swig_ret JQList) {
	var swig_r JQList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (JQList)(SwigcptrJQList(C._wrap_new_JQList__SWIG_2_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewJQList(a ...interface{}) JQList {
	argc := len(a)
	if argc == 0 {
		return NewJQList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewJQList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewJQList__SWIG_2(a[0].(JQList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrJQList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_JQList_size_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJQList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_JQList_capacity_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJQList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_JQList_reserve_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_type_8(_swig_i_1))
}

func (arg1 SwigcptrJQList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_JQList_isEmpty_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJQList) Clear() {
	_swig_i_0 := arg1
	C._wrap_JQList_clear_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrJQList) Add(arg2 JieQiInfo) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_JQList_add_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrJQList) Get(arg2 int) (_swig_ret JieQiInfo) {
	var swig_r JieQiInfo
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (JieQiInfo)(SwigcptrJieQiInfo(C._wrap_JQList_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrJQList) Set(arg2 int, arg3 JieQiInfo) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_JQList_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteJQList(arg1 JQList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_JQList_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

type JQList interface {
	Swigcptr() uintptr
	SwigIsJQList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 JieQiInfo)
	Get(arg2 int) (_swig_ret JieQiInfo)
	Set(arg2 int, arg3 JieQiInfo)
}

const J2000 int = 2451545
type SwigcptrTime uintptr

func (p SwigcptrTime) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTime) SwigIsTime() {
}

func NewTime__SWIG_0() (_swig_ret Time) {
	var swig_r Time
	swig_r = (Time)(SwigcptrTime(C._wrap_new_Time__SWIG_0_sxtwl_0d57379df002c83c()))
	return swig_r
}

func NewTime__SWIG_1(arg1 int, arg2 int, arg3 int, arg4 float64, arg5 float64, arg6 float64) (_swig_ret Time) {
	var swig_r Time
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (Time)(SwigcptrTime(C._wrap_new_Time__SWIG_1_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4), C.double(_swig_i_5))))
	return swig_r
}

func NewTime(a ...interface{}) Time {
	argc := len(a)
	if argc == 0 {
		return NewTime__SWIG_0()
	}
	if argc == 6 {
		return NewTime__SWIG_1(a[0].(int), a[1].(int), a[2].(int), a[3].(float64), a[4].(float64), a[5].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTime) SetY(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_Y_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetY() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_Y_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetM(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_M_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetM() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_M_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetD(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_D_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetD() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_D_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetH(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_h_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrTime) GetH() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Time_h_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetS(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_s_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrTime) GetS() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Time_s_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) GetYear() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_getYear_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetYear(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_setYear_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) SetMonth(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_setMonth_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetMonth() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_getMonth_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) GetDay() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Time_getDay_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetDay(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_setDay_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrTime) GetHour() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Time_getHour_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetHour(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_setHour_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrTime) GetMin() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Time_getMin_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetMour(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_setMour_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrTime) GetSec() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Time_getSec_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTime) SetSec(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Time_setSec_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func DeleteTime(arg1 Time) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Time_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

type Time interface {
	Swigcptr() uintptr
	SwigIsTime()
	SetY(arg2 int)
	GetY() (_swig_ret int)
	SetM(arg2 int)
	GetM() (_swig_ret int)
	SetD(arg2 int)
	GetD() (_swig_ret int)
	SetH(arg2 float64)
	GetH() (_swig_ret float64)
	SetS(arg2 float64)
	GetS() (_swig_ret float64)
	GetYear() (_swig_ret int)
	SetYear(arg2 int)
	SetMonth(arg2 int)
	GetMonth() (_swig_ret int)
	GetDay() (_swig_ret int)
	SetDay(arg2 int)
	GetHour() (_swig_ret float64)
	SetHour(arg2 float64)
	GetMin() (_swig_ret float64)
	SetMour(arg2 float64)
	GetSec() (_swig_ret float64)
	SetSec(arg2 float64)
}

type SwigcptrGZ uintptr

func (p SwigcptrGZ) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGZ) SwigIsGZ() {
}

func NewGZ__SWIG_0() (_swig_ret GZ) {
	var swig_r GZ
	swig_r = (GZ)(SwigcptrGZ(C._wrap_new_GZ__SWIG_0_sxtwl_0d57379df002c83c()))
	return swig_r
}

func NewGZ__SWIG_1(arg1 byte, arg2 byte) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_new_GZ__SWIG_1_sxtwl_0d57379df002c83c(C.char(_swig_i_0), C.char(_swig_i_1))))
	return swig_r
}

func NewGZ(a ...interface{}) GZ {
	argc := len(a)
	if argc == 0 {
		return NewGZ__SWIG_0()
	}
	if argc == 2 {
		return NewGZ__SWIG_1(a[0].(byte), a[1].(byte))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrGZ) SetTg(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GZ_tg_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrGZ) GetTg() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_GZ_tg_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGZ) SetDz(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GZ_dz_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrGZ) GetDz() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_GZ_dz_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteGZ(arg1 GZ) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_GZ_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

type GZ interface {
	Swigcptr() uintptr
	SwigIsGZ()
	SetTg(arg2 byte)
	GetTg() (_swig_ret byte)
	SetDz(arg2 byte)
	GetDz() (_swig_ret byte)
}

type SwigcptrDay uintptr

func (p SwigcptrDay) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDay) SwigIsDay() {
}

func DayFromSolar(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_fromSolar_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func DayFromLunar__SWIG_0(arg1 int, arg2 byte, arg3 int, arg4 bool) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_fromLunar__SWIG_0_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func DayFromLunar__SWIG_1(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_fromLunar__SWIG_1_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func DayFromLunar(a ...interface{}) Day {
	argc := len(a)
	if argc == 3 {
		return DayFromLunar__SWIG_1(a[0].(int), a[1].(byte), a[2].(int))
	}
	if argc == 4 {
		return DayFromLunar__SWIG_0(a[0].(int), a[1].(byte), a[2].(int), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDay) After(arg2 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_after_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDay) Before(arg2 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Day)(SwigcptrDay(C._wrap_Day_before_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarDay() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getLunarDay_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarMonth() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getLunarMonth_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarYear__SWIG_0(arg2 bool) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Day_getLunarYear__SWIG_0_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrDay) GetLunarYear__SWIG_1() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getLunarYear__SWIG_1_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrDay) GetLunarYear(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.GetLunarYear__SWIG_1()
	}
	if argc == 1 {
		return p.GetLunarYear__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDay) GetYearGZ__SWIG_0(arg2 bool) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getYearGZ__SWIG_0_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDay) GetYearGZ__SWIG_1() (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getYearGZ__SWIG_1_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDay) GetYearGZ(a ...interface{}) GZ {
	argc := len(a)
	if argc == 0 {
		return p.GetYearGZ__SWIG_1()
	}
	if argc == 1 {
		return p.GetYearGZ__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDay) GetMonthGZ() (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getMonthGZ_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDay) GetDayGZ() (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getDayGZ_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDay) GetHourGZ__SWIG_0(arg2 byte, arg3 bool) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getHourGZ__SWIG_0_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.char(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDay) GetHourGZ__SWIG_1(arg2 byte) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_Day_getHourGZ__SWIG_1_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))))
	return swig_r
}

func (p SwigcptrDay) GetHourGZ(a ...interface{}) GZ {
	argc := len(a)
	if argc == 1 {
		return p.GetHourGZ__SWIG_1(a[0].(byte))
	}
	if argc == 2 {
		return p.GetHourGZ__SWIG_0(a[0].(byte), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDay) IsLunarLeap() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Day_isLunarLeap_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetSolarYear() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getSolarYear_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetSolarMonth() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getSolarMonth_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetSolarDay() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Day_getSolarDay_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetWeek() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getWeek_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetWeekIndex() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getWeekIndex_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) HasJieQi() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Day_hasJieQi_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetJieQi() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getJieQi_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetJieQiJD() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Day_getJieQiJD_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDay) GetConstellation() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_Day_getConstellation_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteDay(arg1 Day) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Day_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

type Day interface {
	Swigcptr() uintptr
	SwigIsDay()
	After(arg2 int) (_swig_ret Day)
	Before(arg2 int) (_swig_ret Day)
	GetLunarDay() (_swig_ret int)
	GetLunarMonth() (_swig_ret byte)
	GetLunarYear(a ...interface{}) int
	GetYearGZ(a ...interface{}) GZ
	GetMonthGZ() (_swig_ret GZ)
	GetDayGZ() (_swig_ret GZ)
	GetHourGZ(a ...interface{}) GZ
	IsLunarLeap() (_swig_ret bool)
	GetSolarYear() (_swig_ret int)
	GetSolarMonth() (_swig_ret byte)
	GetSolarDay() (_swig_ret int)
	GetWeek() (_swig_ret byte)
	GetWeekIndex() (_swig_ret byte)
	HasJieQi() (_swig_ret bool)
	GetJieQi() (_swig_ret byte)
	GetJieQiJD() (_swig_ret float64)
	GetConstellation() (_swig_ret byte)
}

type SwigcptrJieQiInfo uintptr

func (p SwigcptrJieQiInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrJieQiInfo) SwigIsJieQiInfo() {
}

func (arg1 SwigcptrJieQiInfo) SetJd(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_JieQiInfo_jd_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrJieQiInfo) GetJd() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_JieQiInfo_jd_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrJieQiInfo) SetJqIndex(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_JieQiInfo_jqIndex_set_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrJieQiInfo) GetJqIndex() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_JieQiInfo_jqIndex_get_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewJieQiInfo() (_swig_ret JieQiInfo) {
	var swig_r JieQiInfo
	swig_r = (JieQiInfo)(SwigcptrJieQiInfo(C._wrap_new_JieQiInfo_sxtwl_0d57379df002c83c()))
	return swig_r
}

func DeleteJieQiInfo(arg1 JieQiInfo) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_JieQiInfo_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0))
}

type JieQiInfo interface {
	Swigcptr() uintptr
	SwigIsJieQiInfo()
	SetJd(arg2 float64)
	GetJd() (_swig_ret float64)
	SetJqIndex(arg2 byte)
	GetJqIndex() (_swig_ret byte)
}

func FromSolar(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_fromSolar_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func FromLunar__SWIG_0(arg1 int, arg2 byte, arg3 int, arg4 bool) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Day)(SwigcptrDay(C._wrap_fromLunar__SWIG_0_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func FromLunar__SWIG_1(arg1 int, arg2 byte, arg3 int) (_swig_ret Day) {
	var swig_r Day
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Day)(SwigcptrDay(C._wrap_fromLunar__SWIG_1_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func FromLunar(a ...interface{}) Day {
	argc := len(a)
	if argc == 3 {
		return FromLunar__SWIG_1(a[0].(int), a[1].(byte), a[2].(int))
	}
	if argc == 4 {
		return FromLunar__SWIG_0(a[0].(int), a[1].(byte), a[2].(int), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func SiZhu2Year(arg1 GZ, arg2 GZ, arg3 GZ, arg4 GZ, arg5 int, arg6 int) (_swig_ret JDList) {
	var swig_r JDList
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (JDList)(SwigcptrJDList(C._wrap_siZhu2Year_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5))))
	return swig_r
}

func GetShiGz__SWIG_0(arg1 byte, arg2 byte, arg3 bool) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (GZ)(SwigcptrGZ(C._wrap_getShiGz__SWIG_0_sxtwl_0d57379df002c83c(C.char(_swig_i_0), C.char(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func GetShiGz__SWIG_1(arg1 byte, arg2 byte) (_swig_ret GZ) {
	var swig_r GZ
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GZ)(SwigcptrGZ(C._wrap_getShiGz__SWIG_1_sxtwl_0d57379df002c83c(C.char(_swig_i_0), C.char(_swig_i_1))))
	return swig_r
}

func GetShiGz(a ...interface{}) GZ {
	argc := len(a)
	if argc == 2 {
		return GetShiGz__SWIG_1(a[0].(byte), a[1].(byte))
	}
	if argc == 3 {
		return GetShiGz__SWIG_0(a[0].(byte), a[1].(byte), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func GetRunMonth(arg1 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_getRunMonth_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func GetLunarMonthNum__SWIG_0(arg1 int, arg2 byte, arg3 bool) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (byte)(C._wrap_getLunarMonthNum__SWIG_0_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func GetLunarMonthNum__SWIG_1(arg1 int, arg2 byte) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_getLunarMonthNum__SWIG_1_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0), C.char(_swig_i_1)))
	return swig_r
}

func GetLunarMonthNum(a ...interface{}) byte {
	argc := len(a)
	if argc == 2 {
		return GetLunarMonthNum__SWIG_1(a[0].(int), a[1].(byte))
	}
	if argc == 3 {
		return GetLunarMonthNum__SWIG_0(a[0].(int), a[1].(byte), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func JD2DD(arg1 float64) (_swig_ret Time) {
	var swig_r Time
	_swig_i_0 := arg1
	swig_r = (Time)(SwigcptrTime(C._wrap_JD2DD_sxtwl_0d57379df002c83c(C.double(_swig_i_0))))
	return swig_r
}

func ToJD(arg1 Time) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (float64)(C._wrap_toJD_sxtwl_0d57379df002c83c(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func GetJieQiByYear(arg1 int) (_swig_ret JQList) {
	var swig_r JQList
	_swig_i_0 := arg1
	swig_r = (JQList)(SwigcptrJQList(C._wrap_getJieQiByYear_sxtwl_0d57379df002c83c(C.swig_intgo(_swig_i_0))))
	return swig_r
}


